[{"opcode": 0, "funct": 0, "format": "R", "mnemonic": "add $d, $s, $t", "meaning": "$d = $s + $t"}, {"opcode": 0, "funct": 1, "format": "R", "mnemonic": "sub $d, $s, $t", "meaning": "$d = $s - $t"}, {"opcode": 0, "funct": 2, "format": "R", "mnemonic": "and $d, $s, $t", "meaning": "$d = $s & $t"}, {"opcode": 0, "funct": 3, "format": "R", "mnemonic": "or $d, $s, $t", "meaning": "$d = $s | $t"}, {"opcode": 0, "funct": 4, "format": "R", "mnemonic": "xor $d, $s, $t", "meaning": "$d = $s ^ $t"}, {"opcode": 0, "funct": 5, "format": "R", "mnemonic": "shl $d, $s, $t", "meaning": "$d = $s << $t"}, {"opcode": 0, "funct": 6, "format": "R", "mnemonic": "sal $d, $s, $t", "meaning": "$d = $s <<< $t"}, {"opcode": 0, "funct": 7, "format": "R", "mnemonic": "shr $d, $s, $t", "meaning": "$d = $s >> $t"}, {"opcode": 0, "funct": 8, "format": "R", "mnemonic": "sar $d, $s, $t", "meaning": "$d = $s >>> $t"}, {"opcode": 0, "funct": 9, "format": "R", "mnemonic": "not $d, $s", "meaning": "$d = ~$s"}, {"opcode": 0, "funct": 10, "format": "R", "mnemonic": "lts $d, $s, $t", "meaning": "$d = ($s < $t)"}, {"opcode": 0, "funct": 11, "format": "R", "mnemonic": "gts $d, $s, $t", "meaning": "$d = ($s > $t)"}, {"opcode": 0, "funct": 12, "format": "R", "mnemonic": "ltu $d, $s, $t", "meaning": "$d = ($s < $t)"}, {"opcode": 0, "funct": 13, "format": "R", "mnemonic": "gtu $d, $s, $t", "meaning": "$d = ($s > $t)"}, {"opcode": 0, "funct": 14, "format": "R", "mnemonic": "eq $d, $s, $t", "meaning": "$d = $s == $t"}, {"opcode": 0, "funct": 15, "format": "R", "mnemonic": "ne $d, $s, $t", "meaning": "$d = $s != $t"}, {"opcode": 1, "format": "I", "mnemonic": "lhi $t, i", "meaning": "HH($t) = i"}, {"opcode": 2, "format": "I", "mnemonic": "llo $t, i", "meaning": "LH($t) = i"}, {"opcode": 3, "format": "I", "mnemonic": "lb $t, i($s)", "meaning": "$t = SE(MEM[$s + i]:1)"}, {"opcode": 4, "format": "I", "mnemonic": "lbu $t, i($s)", "meaning": "$t = ZE(MEM[$s + i]:1)"}, {"opcode": 5, "format": "I", "mnemonic": "lh $t, i($s)", "meaning": "$t = SE(MEM[$s + i]:2)"}, {"opcode": 6, "format": "I", "mnemonic": "lhu $t, i($s)", "meaning": "$t = ZE(MEM[$s + i]:2)"}, {"opcode": 7, "format": "I", "mnemonic": "lw $t, i($s)", "meaning": "$t = SE(MEM[$s + i]:4)"}, {"opcode": 8, "format": "I", "mnemonic": "lwu $t, i($s)", "meaning": "$t = ZE(MEM[$s + i]:4)"}, {"opcode": 9, "format": "I", "mnemonic": "sb i($t), $s", "meaning": "MEM[$t + i]:1 = LB($s)"}, {"opcode": 10, "format": "I", "mnemonic": "sh i($t), $s", "meaning": "MEM[$t + i]:2 = LH($s)"}, {"opcode": 11, "format": "I", "mnemonic": "sw i($t), $s", "meaning": "MEM[$t + i]:4 = $s"}, {"opcode": 12, "format": "I", "mnemonic": "br $s, imm", "meaning": "if ($s != 0) pc += imm << 2"}, {"opcode": 13, "format": "I", "mnemonic": "jr $s", "meaning": "pc = $s"}, {"opcode": 14, "format": "J", "mnemonic": "jmp addr", "meaning": "pc += addr << 2"}, {"opcode": 15, "format": "I", "mnemonic": "push $d", "meaning": "MEM[sp] = $d; sp = sp - 4"}, {"opcode": 16, "format": "I", "mnemonic": "pop $d", "meaning": "$d = MEM[sp]; sp = sp + 4"}, {"opcode": 17, "format": "J", "mnemonic": "call addr", "meaning": "MEM[sp] = pc + 4; sp = sp - 4; pc = pc + addr"}, {"opcode": 18, "format": "I", "mnemonic": "callr off($r)", "meaning": "MEM[sp] = pc + 4; sp = sp - 4; pc = $r + off"}, {"opcode": 19, "format": "?", "mnemonic": "ret", "meaning": "pc = MEM[sp]; sp = sp + 4"}, {"opcode": 20, "format": "?", "mnemonic": "trap", "meaning": "Trap the emulator for debugging."}, {"opcode": 21, "format": "?", "mnemonic": "halt", "meaning": "Halt the CPU."}, {"opcode": 22, "format": "?", "mnemonic": "nop", "meaning": "Do nothing."}]
