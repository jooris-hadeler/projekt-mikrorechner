[
    {
        "opcode": 0,
        "funct": 0,
        "format": "R",
        "mnemonic": "add $d, $s, $t",
        "meaning": "$d = $s + $t"
    },
    {
        "opcode": 0,
        "funct": 1,
        "format": "R",
        "mnemonic": "sub $d, $s, $t",
        "meaning": "$d = $s - $t"
    },
    {
        "opcode": 0,
        "funct": 2,
        "format": "R",
        "mnemonic": "and $d, $s, $t",
        "meaning": "$d = $s & $t"
    },
    {
        "opcode": 0,
        "funct": 3,
        "format": "R",
        "mnemonic": "or $d, $s, $t",
        "meaning": "$d = $s | $t"
    },
    {
        "opcode": 0,
        "funct": 4,
        "format": "R",
        "mnemonic": "xor $d, $s, $t",
        "meaning": "$d = $s ^ $t"
    },
    {
        "opcode": 0,
        "funct": 5,
        "format": "R",
        "mnemonic": "shl $d, $s, $t",
        "meaning": "$d = $s << $t"
    },
    {
        "opcode": 0,
        "funct": 6,
        "format": "R",
        "mnemonic": "sal $d, $s, $t",
        "meaning": "$d = $s <<< $t"
    },
    {
        "opcode": 0,
        "funct": 7,
        "format": "R",
        "mnemonic": "shr $d, $s, $t",
        "meaning": "$d = $s >> $t"
    },
    {
        "opcode": 0,
        "funct": 8,
        "format": "R",
        "mnemonic": "sar $d, $s, $t",
        "meaning": "$d = $s >>> $t"
    },
    {
        "opcode": 0,
        "funct": 9,
        "format": "R",
        "mnemonic": "not $d, $s",
        "meaning": "$d = ~$s"
    },
    {
        "opcode": 0,
        "funct": 10,
        "format": "R",
        "mnemonic": "lts $d, $s, $t",
        "meaning": "$d = ($s < $t)"
    },
    {
        "opcode": 0,
        "funct": 11,
        "format": "R",
        "mnemonic": "gts $d, $s, $t",
        "meaning": "$d = ($s > $t)"
    },
    {
        "opcode": 0,
        "funct": 12,
        "format": "R",
        "mnemonic": "ltu $d, $s, $t",
        "meaning": "$d = ($s < $t)"
    },
    {
        "opcode": 0,
        "funct": 13,
        "format": "R",
        "mnemonic": "gtu $d, $s, $t",
        "meaning": "$d = ($s > $t)"
    },
    {
        "opcode": 0,
        "funct": 14,
        "format": "R",
        "mnemonic": "eq $d, $s, $t",
        "meaning": "$d = $s == $t"
    },
    {
        "opcode": 0,
        "funct": 15,
        "format": "R",
        "mnemonic": "ne $d, $s, $t",
        "meaning": "$d = $s != $t"
    },
    {
        "opcode": 1,
        "format": "I",
        "mnemonic": "shi $t, i",
        "meaning": "HH($t) = i"
    },
    {
        "opcode": 2,
        "format": "I",
        "mnemonic": "slo $t, i",
        "meaning": "LH($t) = i"
    },
    {
        "opcode": 3,
        "format": "I",
        "mnemonic": "load $t, i($s)",
        "meaning": "$t = MEM[$s + i]:4"
    },
    {
        "opcode": 4,
        "format": "I",
        "mnemonic": "store i($t), $s",
        "meaning": "MEM[$t + i]:4 = $s"
    },
    {
        "opcode": 5,
        "format": "I",
        "mnemonic": "br $s, imm",
        "meaning": "if ($s != 0) pc += imm << 2"
    },
    {
        "opcode": 6,
        "format": "I",
        "mnemonic": "jr $s",
        "meaning": "pc = $s"
    },
    {
        "opcode": 7,
        "format": "J",
        "mnemonic": "jmp addr",
        "meaning": "pc += addr << 2"
    },
    {
        "opcode": 62,
        "format": "J",
        "mnemonic": "halt",
        "meaning": ""
    },
    {
        "opcode": 63,
        "format": "?",
        "mnemonic": "nop",
        "meaning": "Do nothing."
    }
]
