$date
  Sun Jan 26 13:51:10 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module alu_opcode $end
$upscope $end
$scope module wbtest $end
$var reg 32 ! data_val_in[31:0] $end
$var reg 32 " alu_val_in[31:0] $end
$var reg 1 # clk_in $end
$var reg 1 $ mem_to_reg_wb_in $end
$var reg 1 % reg_write_wb_in $end
$var reg 5 & write_reg_in[4:0] $end
$scope module wbi $end
$var reg 32 ' data_val[31:0] $end
$var reg 32 ( alu_val[31:0] $end
$var reg 1 ) clk $end
$var reg 1 * mem_to_reg_wb $end
$var reg 1 + reg_write_wb $end
$var reg 5 , write_reg_in[4:0] $end
$var reg 5 - write_reg_out[4:0] $end
$var reg 1 . write_enable_out $end
$var reg 32 / write_data[31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000001 !
b00000000000000000000000000000001 "
0#
1$
1%
b00001 &
b00000000000000000000000000000001 '
b00000000000000000000000000000001 (
0)
1*
1+
b00001 ,
b00001 -
1.
b00000000000000000000000000000001 /
#10000000
1#
1)
#20000000
